#include <iostream>
#include <queue>
#include <algorithm>
#include <cmath>

using namespace std;

int lineNum, ballX, ballY = 1000001;

class Info{
public:
    float x1, x2, y1, y2;

    Info(float x_1, float y_1, float x_2, float y_2){
        x1 = x_1;
        y1 = y_1;

        x2 = x_2;
        y2 = y_2;
    }

    bool operator < (const Info in) const{
        return getDistance(x1, y1, x2, y2) > getDistance(in.x1, in.y1, in.x2, in.y2);
    }

    const float getDistance(float x1, float y1, float x2, float y2){
        float a = (y2 - y1) / (x2 - x1);
        float b = y2 - a * x2;
        float result = a*(float)100002 + b;
        return  result;
    }
};

priority_queue<Info> qu;


int main() {
    float x1 = 100000, y1 = 100000, x2 = 100004, y2 = 100004;

    cout << result << endl;

//    scanf("%d", &lineNum);
//    for (int i =  0 ; i < lineNum; i++) {
//        int a,b,c,d;
//        scanf("%d %d %d %d", &a, &b, &c, &d);
//        qu.push(Info(a,b,c,d));
//    }
//    scanf("%d", &ballX);
//
//    ballY = min(qu.top().y2, qu.top().y1);
//
//    while (!qu.empty()) {
//        Info cInfo = qu.top();
//        qu.pop();
//
//
//        if ((cInfo.x1 <= ballX  && ballX <= cInfo.x2) || (cInfo.x2 <= ballX  && ballX <= cInfo.x1) ) {
//            if ((cInfo.y1 <= ballY  && ballY <= cInfo.y2) || (cInfo.y2 <= ballY  && ballY <= cInfo.y1) ){
//                if (cInfo.y1 > cInfo.y2) {
//                    ballX = cInfo.x2;
//                    ballY = cInfo.y2;
//                }else{
//                    ballX = cInfo.x1;
//                    ballY = cInfo.y1;
//                }
//
//                printf("선 지남 : ");
//                printf("%d %d\n", ballX, ballY);
//            }else{
//                printf("Y범위 초과\n");
//            }
//        }else{
//            printf("X범위 초과\n");
//        }
//
//    }

//    printf("%d\n", ballX);
    return 0;
}
